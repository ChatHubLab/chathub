name: Build

on:
    push:
    pull_request:

jobs:
    prepare:
        runs-on: ubuntu-latest

        steps:
            - name: Check out
              uses: actions/checkout@v4
            - name: Set up Node
              uses: actions/setup-node@v4
              with:
                  node-version: 20
            - id: cache
              name: Yarn Cache Dir
              run: echo "value=$(yarn cache dir)" >> $GITHUB_OUTPUT
            - name: Restore Lockfile
              uses: actions/cache@v3
              with:
                  path: yarn.lock
                  key: yarn-lock-${{ github.sha }}
            - name: Restore Cache
              uses: actions/cache@v3
              with:
                  path: ${{ steps.cache.outputs.value }}
                  key: yarn-cache-${{ github.sha }}-node-20

            - name: First Install
              run: yarn

            - name: Enable corepack
              run: corepack enable

            - name: Activate latest Yarn
              run: yarn set version stable

            - name: Install dependencies
              run: yarn

        outputs:
            cache-dir: ${{ steps.cache.outputs.value }}

    build:
        runs-on: ubuntu-latest
        needs:
            - prepare

        steps:
            - name: Check out
              uses: actions/checkout@v4
            - name: Set up Node
              uses: actions/setup-node@v4
              with:
                  node-version: 20
            - name: Restore Lockfile
              uses: actions/cache@v3
              with:
                  path: yarn.lock
                  key: yarn-lock-${{ github.sha }}
            - name: Restore Cache
              uses: actions/cache@v3
              with:
                  path: ${{ needs.prepare.outputs.cache-dir }}
                  key: yarn-cache-${{ github.sha }}-node-20

            - name: Enable corepack
              run: corepack enable
            - name: Activate latest Yarn
              run: yarn set version stable

            - name: Install dependencies
              run: yarn install
            - name: Build Clean
              run: yarn fast-build --clean
            - name: Build
              run: yarn fast-build
            - name: Upload Packages
              uses: actions/upload-artifact@v3
              with:
                  name: packages
                  path: |
                      packages
                      plugins

    lint:
        # if: ${{  github.event_name == 'pull_request' }}
        runs-on: ubuntu-latest
        needs:
            - prepare

        steps:
            - name: Check out
              uses: actions/checkout@v4
            - name: Set up Node
              uses: actions/setup-node@v4
              with:
                  node-version: 20
            - name: Restore Lockfile
              uses: actions/cache@v3
              with:
                  path: yarn.lock
                  key: yarn-lock-${{ github.sha }}
            - name: Restore Lint Cache
              uses: actions/cache@v3
              with:
                  path: .eslintcache
                  key: eslint-cache-${{ github.sha }}
            - name: Restore Cache
              uses: actions/cache@v3
              with:
                  path: ${{ needs.prepare.outputs.cache-dir }}
                  key: yarn-cache-${{ github.sha }}-node-20

            - name: Enable corepack
              run: corepack enable
            - name: Activate latest Yarn
              run: yarn set version stable

            - name: Install dependencies
              run: yarn install
            - name: Lint
              run: yarn lint


